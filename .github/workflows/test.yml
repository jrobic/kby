name: Test and Deploy
on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - ".husky/**"
      - ".dockerignore"
      - ".gitignore"
      - "*.todo"
  pull_request:
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - ".husky/**"
      - ".dockerignore"
      - ".gitignore"
      - "*.todo"
jobs:
  lint:
    name: Lint (${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.x"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - name: Install Deps
        uses: ./.github/deps
        with:
          node-version: ${{ matrix.node }}

      - name: Codegen
        run: pnpm run codegen --filter="web"

      - name: Lint
        run: pnpm run lint

  test-unit:
    name: Test Unit (${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.x"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - name: Install Deps
        uses: ./.github/deps
        with:
          node-version: ${{ matrix.node }}

      - name: Codegen
        run: pnpm run codegen --filter="web"

      - name: Test
        run: pnpm run test:cov

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: apps/api/coverage/clover.xml
          flags: api
          name: api

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: apps/web/coverage/clover.xml
          flags: web
          name: web

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/ui/coverage/clover.xml
          flags: ui
          name: ui

  build:
    name: Build (${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.x"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - name: Install Deps
        uses: ./.github/deps
        with:
          node-version: ${{ matrix.node }}

      - name: Build
        run: pnpm run schema && pnpm run build

  e2e:
    name: Cypress
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - name: Install Deps
        uses: ./.github/deps

      - name: Build
        run: pnpm run schema && pnpm run build

      - name: Copy test env vars (apps/web)
        run: cp apps/web/.env.example apps/web/.env

      - name: Cypress run
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          start: pnpm run dev
          wait-on: "http://localhost:3000/health, http://localhost:9001"
          command: pnpm run cy:run --filter=e2e -- --record --parallel --group "KBY Cypress" --key ${{ secrets.CYPRESS_RECORD_KEY }}
          install: false
        env:
          DISABLE_TELEMETRY: "true"
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/e2e/coverage/clover.xml
          flags: e2e
          name: e2e

  deploy-staging-api:
    needs: [lint, test-unit, build, e2e]
    environment:
      name: staging
    name: Deploy API to Staging
    # permissions:
    #   contents: read
    #   packages: write
    #   # This is used to complete the identity challenge
    #   # with sigstore/fulcio when running outside of PRs.
    #   id-token: write
    outputs:
      api-url: ${{ steps.deploy-cloud-run.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        id: deploy-cloud-run
        uses: "google-github-actions/setup-gcloud@v0"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure Docker & Gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # push: ${{ github.event_name != 'pull_request' }}
          push: true
          tags: eu.gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ steps.vars.outputs.sha_short }}
          # target: api

      # - name: Build & Push
      #   run: |
      #     docker build -f Dockerfile --tag eu.gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ steps.vars.outputs.sha_short }} .
      #     docker image push eu.gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ steps.vars.outputs.sha_short }}

      - id: deploy
        uses: "google-github-actions/deploy-cloudrun@v0"
        with:
          service: ${{ secrets.GCP_APPLICATION }}
          image: eu.gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ steps.vars.outputs.sha_short }}
          region: ${{ secrets.GCP_REGION }}

      - name: "Use output"
        run: |
          sleep 15
          curl "${{ steps.deploy.outputs.url }}/health" || true
          echo ${{ steps.deploy.outputs.url }} > api_url.txt

      - name: Temporarily save api-url
        uses: actions/upload-artifact@v2
        with:
          name: api-url-artifact-${{ github.run_id }}
          path: api_url.txt
          retention-days: 1

  deploy-staging-web:
    needs: [deploy-staging-api]
    environment:
      name: staging
      url: ${{ steps.vercel-action-staging.outputs.preview-url }}
    name: Deploy Web App to Staging
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == "push" && github.ref == "refs/heads/develop" }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "50"

      - uses: actions/download-artifact@master
        with:
          name: api-url-artifact-${{ github.run_id }}
          # path: api_url.txt

      - name: Display structure of downloaded files
        run: ls -R

      - name: Set API_URL env
        run: echo "API_URL=$(cat api_url.txt)" >> $GITHUB_ENV

      - name: Check API_URL env
        run: echo "${{ env.API_URL }} - $API_URL"

      - name: "Check Api URL"
        run: curl "$(cat api_url.txt)/health"

      - name: Install Deps
        uses: ./.github/deps
        with:
          node-version: ${{ matrix.node }}

      - name: Build
        run: pnpm run codegen -- --scope="@spv/web" && pnpm run build -- --scope="@spv/web" --include-dependencies
        env:
          KBY_API_GRAPHQL_URL: ${{ env.API_URL }}/graphql

      - name: Deploy Web App staging
        uses: amondnet/vercel-action@v19
        id: vercel-action-staging
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web
          vercel-args: "--prod"
          alias-domains: |
            staging-kby.vercel.app
